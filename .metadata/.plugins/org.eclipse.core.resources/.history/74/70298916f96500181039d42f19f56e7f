package wordladder;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class WordLadder {
	private List<String> words = new ArrayList<String>();
	private List<String> ladder = new ArrayList<String>();
	private int steps;
	
	public WordLadder() {
		// TODO Auto-generated constructor stub
	}

	public WordLadder(String source) {
		
		try(Scanner fileIn = new Scanner(new File(source))){
			while(fileIn.hasNextLine()) {
				words.add(fileIn.nextLine());
			}
		}catch(FileNotFoundException e){
			System.out.println(e.getMessage());
		}
	}
	public boolean findLadder(String startWord, String endWord) {
		fLadder(startWord, endWord);
		return false;
	}
	private boolean fLadder(String currentWord, String endWord) {
		if(currentWord.equalsIgnoreCase(endWord)) {
			System.out.println("Success");
			printList(ladder);
			return true;
		} else if (!(words.contains(currentWord))) {
			System.out.println("No ladder found");
			return false;
		} else if(oneDiff(currentWord, endWord) 
				&& !(ladder.contains(currentWord))) {
			ladder.add(currentWord);
			if(fLadder(currentWord, endWord)==true) {
				return true;
			}
		}else
			return false;
		return false;
	}
	public void printList(List<String> list) {
		System.out.println(list);
	}
	public boolean inList(String word, List<String> list) {
		if(list.contains(word))
			return true;
		else
			return false;
	}
	public static boolean oneDiff(String word1, String word2) {
		if(word1.length() == word2.length()) {
			if(word1.compareToIgnoreCase(word2) == 1) {
				return true;
			}else
				return false;
		}
		else
			return false;
	}


	public static void main(String[] args) {
		String word1 = "word";
		String word2 = "ward";
		System.out.println(oneDiff(word1, word2));
		System.out.println(word1.compareToIgnoreCase(word2));
	}
}